res <- get(url = URL, query = list(LAWD_CD = '11110',DEAL_NO = '201512',serviceKey = myKey %>% I() ))
myKey <- Sys.getenv('D%2BzZ%2B%2BKS2q7h3dBQmQua7MUzCFuL%2FHRCKHy26%2FZHCLwgDj0SK0hX%2FOMoK3kIEyzw4lp%2FQLsK%2FWktchm9THQi%2BA%3D%3D')
res <- get(url = URL, query = list(LAWD_CD = '11110',DEAL_NO = '201512',serviceKey = myKey %>% I() ))
library(tidyverse)
library(rvest)
library(httr)
library(rvest)
library(tidyverse)
library(httr)
library(rvest)
library(jsonlite)
library(tidyverse)
library(httr)
library(rvest)
library(jsonlite)
library(tidyverse)
library(httr)
library(rvest)
library(jsonlite)
library(tidyverse)
library(httr)
library(rvest)
library(jsonlite)
myKey
myKey <- Sys.getenv('D%2BzZ%2B%2BKS2q7h3dBQmQua7MUzCFuL%2FHRCKHy26%2FZHCLwgDj0SK0hX%2FOMoK3kIEyzw4lp%2FQLsK%2FWktchm9THQi%2BA%3D%3D')
URL <- 'http://openapi.molit.go.kr:8081/OpenAPI_ToolInstallPackage/service/rest/RTMSOBJSvc/getRTMSDataSvcAptTrade'
res <- get(url = URL, query = list(LAWD_CD = '11110',DEAL_NO = '201512',serviceKey = myKey %>% I() ))
res <- GET(url = URL, query = list(LAWD_CD = '11110',DEAL_NO = '201512',serviceKey = myKey %>% I() ))
print(x=res)
res %>%
content(as = 'text', encoding = 'UTF-8') %>%
fromJSON() ->json
str(object = json)
str(object = json)
install.packages("XML")
library(XML)
#api_url을 통해 웹에 접속하여 XML 파일 다운로드 및 파싱
#http://openapi.seoul.go.kr:8088/sample/xml/ListPublicReservationCulture/1/5/%EC%BD%98%EC%84%9C%ED%8A%B8
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, auth_key, type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
#api_url을 통해 웹에 접속하여 XML 파일 다운로드 및 파싱
#http://openapi.seoul.go.kr:8088/sample/xml/ListPublicReservationCulture/1/5/%EC%BD%98%EC%84%9C%ED%8A%B8
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, auth_key, type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
myKey <- 'D%2BzZ%2B%2BKS2q7h3dBQmQua7MUzCFuL%2FHRCKHy26%2FZHCLwgDj0SK0hX%2FOMoK3kIEyzw4lp%2FQLsK%2FWktchm9THQi%2BA%3D%3D'
#api_url을 통해 웹에 접속하여 XML 파일 다운로드 및 파싱
#http://openapi.seoul.go.kr:8088/sample/xml/ListPublicReservationCulture/1/5/%EC%BD%98%EC%84%9C%ED%8A%B8
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, auth_key, type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, auth_key, type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
type = 'xml'
startindex = '1'
endindex = '50'
api_url = paste(url, auth_key, type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
type = 'xml'
api_url = paste(url, auth_key, type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
type = 'xml'
LAWD_CD = '11110'
DEAL_YMD = '201512'
api_url = paste(url, auth_key, type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
parsedXml <-xmlParse(api_url)
url = URL
> auth_key = myKey
url = URL
auth_key = myKey
type = 'xml'
LAWD_CD = '11110'
DEAL_YMD = '201512'
api_url = paste(url, auth_key, type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
type = 'xml'
LAWD_CD = '11110'
DEAL_YMD = '201512'
api_url = paste(url, type, LAWD_CD, DEAL_YMD, auth_key)
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
type = 'xml'
LAWD_CD = '11110'
DEAL_YMD = '201512'
api_url = paste(url, LAWD_CD, DEAL_YMD, auth_key)
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
type = 'xml'
LAWD_CD = '11110'
DEAL_YMD = '201512'
api_url = paste(url, LAWD_CD, DEAL_YMD, auth_key)
parsedXml <-xmlParse(api_url)
api_url
url = URL
auth_key = myKey
type = 'xml'
LAWD_CD = '11110'
DEAL_YMD = '201512'
api_url = paste(url, 'LAWD_CD=11110'', 'DEAL_YMD=201512', auth_key)
url = URL
auth_key = myKey
type = 'xml'
LAWD_CD = '11110'
DEAL_YMD = '201512'
api_url = paste(url, 'LAWD_CD=11110', 'DEAL_YMD=201512', auth_key)
parsedXml <-xmlParse(api_url)
api_url
url = URL
auth_key = myKey
type = 'xml'
LAWD_CD = '11110'
DEAL_YMD = '201512'
api_url = paste(url, '?LAWD_CD=11110', 'DEAL_YMD=201512', auth_key)
parsedXml <-xmlParse(api_url)
url
parsedXml
library(XML)
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, auth_key, type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
api_url
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("&serviceKey=",myKey), type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
api_url
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey))
parsedXml <-xmlParse(api_url)
api_url
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey), type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey), type, service, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
api_url
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey), type, service, startindex, endindex, sep = '')
parsedXml <-xmlParse(api_url)
api_url
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey),sep = '/')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey),sep = '/')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey),sep = '/')
parsedXml <-xmlParse(api_url)
parsedXml
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey), type, service, startindex, endindex, sep = '')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey), type, service, startindex, endindex, sep = '')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey), type, service, startindex, endindex, sep = '')
parsedXml <-xmlParse(api_url)
parsedXml
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey), type, myKey, startindex, endindex, sep = '')
parsedXml <-xmlParse(api_url)
parsedXml
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"), type, myKey, startindex, endindex, sep = '')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"), type, myKey, startindex, endindex, sep = '')
parsedXml <-xmlParse(api_url)
api_url
parsedXml
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey), type, myKey, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
parsedXml
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey), type, myKey, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
url = URL
auth_key = myKey
# sample 제거
type = 'xml'
service = 'ListPublicReservationCulture'
startindex = '1'
endindex = '50'
api_url = paste(url, paste("?LAWD_CD=","11110"),paste("&DEAL_YMD=","201512"),paste("&serviceKey=",myKey), type, myKey, startindex, endindex, sep = '/')
parsedXml <-xmlParse(api_url)
git
demo
install.packages("wordcloud")
library(wordcloud)
word <- c("인천광역시","강화군","옹진군")
wordcloud(word,frequency,colors =  "blue")
wordcloud(word,frequency,colors =  "blue")
frequency <- c(1000.500,30)
wordcloud(word,frequency,colors="blue")
wordcloud(word,frequency,colors="blue")
wordcloud(word,frequency,colors="blue")
frequency <- c(1000,500,30)
wordcloud(word,frequency,colors="blue")
wordcloud(word,frequency,colors="rainbow")
wordcloud(word,frequency,colors="rainbow")
wordcloud(word,frequency,colors=rainbow)
wordcloud(word,frequency,colors=rainbow(length(word)))
wordcloud(word,frequency,colors=rainbow(length(word)))
word <- c("인천광역시","서울시","금정동")
frequency <- c(1000,500,30)
wordcloud(word,frequency,colors=rainbow(length(word)))
install.packages("rstudioapi")
install.packages("rstudioapi")
#install.packages("rstudioapi")  #추가로 인스톨 작업을 하지않기위해 인스톨 후 주석처리
load("./04_preprocess/04_preprocess.rdata"):
#install.packages("rstudioapi")  #추가로 인스톨 작업을 하지않기위해 인스톨 후 주석처리
load("./04_preprocess/04_preprocess.rdata");
load("./04_preprocess/04_preprocess.rdata");
install.packages("rstudioapi")
load("./04_preprocess/04_preprocess.rdata");
load("04_preprocess/04_preprocess.rdata");
load("/04_preprocess/04_preprocess.rdata");
getwd()
setwd(dirname(rstudioapi::getSourceEditorContext()$path));
getwd()
load("/04_preprocess/04_preprocess.rdata");
load("./04_preprocess/04_preprocess.rdata");
load("./04_preprocess/04_preprocess.rdata");
getwd()
loc <- load("./04_preprocess/04_preprocess.rdata");
loc
loc <- load("./04_preprocess/04_preprocess.rdata")
loc$code <- as.character(loc$code)
head(loc, 2)
url_list <- list()
cnt <-0
for(m in 1:100){
#---# 세부 거래내역 분리
item_temp <- xmlSApply(items[[m]],xmlValue)
item_temp_dt <- data.table(apt_nm = item_temp[6],   # 아파트 이름
item[[m]] <- item_temp_dt}
#---# 세부 거래내역 분리
item_temp <- xmlSApply(items[[m]],xmlValue)
for(m in 1:100){
#---# 세부 거래내역 분리
item_temp <- xmlSApply(items[[m]],xmlValue)
item_temp_dt <- data.table(apt_nm = item_temp[6],   # 아파트 이름
item[[m]] <- item_temp_dt}
# install.packages("rstudioapi")  추가로 인스톨 작업을 하지않기위해 인스톨 후 주석처리
library(XML)        # install.packages("XML")
library(data.table) # install.packages("data.table")
library(stringr)    # install.packages("stringr")
loc <- load("./04_preprocess/04_preprocess.rdata")
loc$code <- as.character(loc$code)
head(loc, 2)
head(loc, 6)
head(loc, 3)
head(loc, 1)
url_list <- list()
url_list
list()
ls()
loc <- load("./04_preprocess/04_preprocess.rdata")
ls()
load("./04_preprocess/04_preprocess.rdata")
ls()
load("C:/Users/user/Documents/GitHub/midterm/04_preprocess/04_preprocess.rdata")
ls()
write.csv(theItemOfInterestFromYourDRadataFileAsThereMayBeMoreThanOneThingInthere,
file="yourCSV.csv")
resave <- function(file){
e <- new.env(parent = emptyenv())
load(file, envir = e)
objs <- ls(envir = e, all.names = TRUE)
for(obj in objs) {
.x <- get(obj, envir =e)
message(sprintf('Saving %s as %s.csv', obj,obj) )
write.csv(.x, file = paste0(obj, '.csv'))
}
}
resave('./04_preprocess/04_preprocess.rdata')
for(obj in 100) {
.x <- get(obj, envir =e)
message(sprintf('Saving %s as %s.csv', obj,obj) )
write.csv(.x, file = paste0(obj, '.csv'))
}
save('./04_preprocess/04_preprocess.rdata')
save('./04_preprocess/04_preprocess.rdata')
resave <- function(file){
e <- new.env(parent = emptyenv())
load(file, envir = e)
objs <- ls(envir = e, all.names = TRUE)
for(obj in objs) {
.x <- get(obj, envir =e)
message(sprintf('Saving %s as %s.csv', obj,obj) )
write.csv(.x, file = paste0(obj, '.csv'))
}
}
save <- function(file){
e <- new.env(parent = emptyenv())
load(file, envir = e)
objs <- ls(envir = e, all.names = TRUE)
for(obj in objs) {
.x <- get(obj, envir =e)
message(sprintf('Saving %s as %s.csv', obj,obj) )
write.csv(.x, file = paste0(obj, '.csv'))
}
}
save('./04_preprocess/04_preprocess.rdata')
load("./04_preprocess/04_preprocess.rdata")
save <- function(file){
e <- new.env(parent = emptyenv())
load(file, envir = e)
objs <- ls(envir = e, all.names = TRUE)
for(obj in objs) {
.x <- get(obj, envir =e)
message(sprintf('Saving %s as %s.csv', obj,obj) )
write.csv(.x, file = paste0('apt_name', '.csv'))
}
}
save('./04_preprocess/04_preprocess.rdata')
save <- function(file){
e <- new.env(parent = emptyenv())
load(file, envir = e)
objs <- ls(envir = e, apt_nm = item_temp[6])
for(obj in objs) {
.x <- get(obj, envir =e)
message(sprintf('Saving %s as %s.csv', obj,obj) )
write.csv(.x, file = paste0('apt_name', '.csv'))
}
}
save('./04_preprocess/04_preprocess.rdata')
save <- function(file){
e <- new.env(parent = emptyenv())
load(file, envir = e)
objs <- ls(envir = e, all.names = TRUE)
for(obj in objs) {
.x <- get(obj, envir =e)
message(sprintf('Saving %s as %s.csv', obj,obj) )
write.csv(.x, file = paste0('apt_name', '.csv'))
}
}
all.names
e <- new.env(parent = emptyenv())
e
save <- function(file){
e <- new.env(parent = emptyenv())
load(file, envir = e)
objs <- ls(envir = e, 'apt_nm' = TRUE)
for(obj in objs) {
.x <- get(obj, envir =e)
message(sprintf('Saving %s as %s.csv', obj,obj) )
write.csv(.x, file = paste0('apt_name', '.csv'))
}
}
save('./04_preprocess/04_preprocess.rdata')
e <- new.env(parent = emptyenv())
load(file, envir = e)
file = './04_preprocess/04_preprocess.rdata'
e <- new.env(parent = emptyenv())
load(file, envir = e)
objs <- ls(envir = e, apt_nm = TRUE)
objs
objs
file = './04_preprocess/04_preprocess.rdata'
e <- new.env(parent = emptyenv())
load(file, envir = e)
objs <- ls(envir = e, all.names = TRUE)
objs
.x <- get(obj, envir =e)
obj
for(obj in objs) {
.x <- get(obj, envir =e)
message(sprintf('Saving %s as %s.csv', obj,obj) )
write.csv(.x, file = paste0('apt_name', '.csv'))
}
